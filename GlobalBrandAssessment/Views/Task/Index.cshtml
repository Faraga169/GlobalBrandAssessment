
@model IEnumerable<GetAllandSearchTaskDTO>
@{
    ViewData["Title"] = "Tasks List";
}



@if (!string.IsNullOrEmpty(TempData["Message"] as string))
{
    <!-- Toast Container -->
    <div aria-live="polite" aria-atomic="true" style="position: relative;">
        <div id="myToast" class="toast shadow-lg custom-toast" data-autohide="false" style="background-color: #f0f8ff; border: 1px solid #007bff;">
            <div class="toast-header" style="background-color: #007bff; color: white;">
                <strong class="mr-auto">🔔 Notification</strong>
                <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" style="color: white;">
                    <span>&times;</span>
                </button>
            </div>
            <div class="toast-body" style="color: #00008b; font-weight: bold;">
                @TempData["Message"]
            </div>
        </div>
    </div>
}

<div class="d-flex justify-content-center">
    <h2 class="text-secondary fs-3">Display Tasks</h2>
</div>
<div class="d-flex justify-content-center mb-2">
    <a class="btn btn-outline-secondary bg-opacity-50" asp-action="Create"><i class="fa-solid fa-circle-plus mx-2"></i>Create New Task</a>
</div>

<div class="input-group mb-2">
    <input type="search"
           class="form-control rounded-start-pill searchvalue"
           placeholder="Search by Task Title">
    <button type="submit" class="btn btn-outline-secondary rounded-end-pill" id="searchbtn">
        <i class="fa-solid fa-magnifying-glass"></i>
    </button>
</div>

@if (@Model.Count() > 0)
{
    <table class="table table-hover table-striped table-responsive text-center table-dark rounded-2">
        <thead>
            <tr>
                <th scope="col">@Html.DisplayNameFor(X => X.FirstName)</th>
                <th scope="col">@Html.DisplayNameFor(X => X.LastName)</th>
                <th scope="col">@Html.DisplayNameFor(X => X.Status)</th>
                <th scope="col">@Html.DisplayNameFor(X => X.Title)</th>
                <th scope="col">@Html.DisplayNameFor(X => X.Description)</th>
                <th scope="col">@Html.DisplayNameFor(X => X.FilePath)</th>
                <th scope="col">@Html.DisplayNameFor(X => X.Content)</th>
                <th scope="col" colspan="2">Actions</th>
            </tr>
        </thead>
        <tbody id="taskTable">
            @await Html.PartialAsync("_IndexTaskPartial", Model)
        </tbody>
    </table>

}

else{
        <div class="alert alert-info mt-3">
            <h3 class="text-center">No Tasks Found</h3>
        </div>
}


     


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>

         $(document).ready(function () {
        $(".deletebtn").on("click", function () {

            var taskId = $(this).data("id");

        if(confirm("Are you sure you want to delete this employee?")) {
            $.ajax({
                url: '@Url.Action("Delete", "Task")',
                type: "POST",
                data: { id: taskId },
                success: function (response) {
                    if (response.success) {
                        window.location.href =response.redirecturl;;
                    }
                },
                error: function () {
                    alert("Something went wrong. Please try again.");
                }
            });
        }
        });
        });

    $(document).ready(function () {
        $("#searchbtn").on('click',function(){
        var value=$(".searchvalue").val();
         $.ajax({
                url: '@Url.Action("Search", "Task")',
                type: "POST",
                data: { searchname: value },
                success: function (result) {
                        $("#taskTable").html(result);
                },
                error: function () {
                    alert("Something went wrong.");
                }
            });
        });

    });
</script>